#Not duuun

function Extract-ScriptVariables
{
    param(
        [parameter()][Object[]]$Contents, #Array of Strings object return from Get-Content
        [parameter()][String]$Rex
        )
    
    BEGIN
    { 
        if(!$Rex)
        {
            $Rex = [regex]::new('(?<=\s)\$[0-9a-zA-Z]{1,}(?=\s)')
        }
    
    }
    PROCESS
    {
    
        foreach($Line in $Contents)
        {
            $Matched = [Regex]::Match($Line, $Rex).value
            
            if($Matched)
            {
                $Matched
            }

        }
    }
    END
    {
    
    }    
    
 }

 function Extract-FunctionNames
{
    #Array of Strings object return from Get-Content
    param([parameter()][Object[]]$FilePath)
    
    BEGIN
    { 
        if(!$Rex)
        {
            $RegexOpts = [Text.RegularExpressions.RegexOptions]'IgnoreCase, CultureInvariant, multiline'
            #Find out how many nested expressions "{" are in the function
            $BaseExp  = '(?<=\s)function.*?'
            $OpensExp = $BaseExp += '(\{.*?\})'
            $CloseExp = '.*?\}'
            $OpensRex = [regex]::new($OpensExp)
            #$FunctionTable = @{}
            $FuncNameRex = '(?!=function\s+)[A-Za-z0-9]{1,}(?=\{|\s+\{)'
            $FileContent = Get-Content $FilePath -Encoding Ascii
            $Stripped = $FileContent | ? { $_ -ne '' } | % { $_.trim() } 
        }
    
    }
    PROCESS
    {
        $Captures = [regex]::Matches($Stripped, $OpensRex, $RegexOpts)        
        
        for($i=0;$i -lt $Captures.Count;$i++)
        {
           $FuncValue = $($Captures[$i].value)
           $FuncName = [regex]::Matches($FuncValue,$FuncNameRex, $RegexOpts).value
           $FuncName
           #TODO Extact function contents. Need some complex rules to accont for if's,else,try
           #opening expression.              
           #$FuncCapture = [regex]::Matches($FuncValue , $FuncNameRex, $RegexOpts)
           #$OpenCounts = $([Regex]::Matches($FuncValue, '{')).count
           #Write-Verbose "Found function $FuncName with $OpenCounts expressions"
           #$Exp = $CloseExp * $OpenCounts
           #$Final = '(?!=function\s+' + $FuncName + ')\{|\s+\{' + $Exp
           #$FuncContent = $([Regex]::Matches($Stripped, $Final, $RegexOpts))[0].value
           #$FunctionTable["$FuncName"] = $FuncContent
        }

    }
    END
    {

    }    
    
 }
 

